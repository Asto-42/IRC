struct pollfd {
    int   fd;         /* Descripteur de fichier */
    short events;     /* Événements attendus    */
    short revents;    /* Événements détectés    */
};



void      		Server::initCommand(void)
{
	_command["CAP"]     = &Server::capLs;
	_command["NICK"]    = &Server::nick;
	_command["USER"]    = &Server::user;
	_command["PASS"]    = &Server::pass;
	_command["PING"]    = &Server::ping;
	_command["QUIT"]    = &Server::quit;
	_command["JOIN"]    = &Server::join;
	_command["PRIVMSG"] = &Server::privmsg;
	_command["KICK"]    = &Server::kick;
	_command["TOPIC"]   = &Server::topic;
	_command["MODE"]    = &Server::mode;
	_command["INVITE"]  = &Server::invite;
	_command["PART"]    = &Server::part;
	// _command["OPER"]    = &Server::oper;
}


if (client_fd != -1)
{
	this->add_to_poll_fds(client_fd);
	User tmp(client_fd);
	_users[client_fd] = tmp;
}

std::map<int, User>		_users;
